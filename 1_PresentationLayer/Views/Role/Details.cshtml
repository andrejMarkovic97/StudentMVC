@model  _1_PresentationLayer.ViewModels.RoleViewModel

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>
@using (Html.BeginForm("Edit", "Role"))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Role</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.RoleID)

<div class="form-group">
    @Html.LabelFor(model => model.RoleName, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.RoleName, Model.IsReadOnly == true ? (object)new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } : (object)new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @{ if (Model.IsDisabled == false)
                {
                    <button type="submit" value="Submit" class="btn btn-primary" }>
                        Submit
                    </button>
                }
            }
            <button type="button" class="btn btn-default active" onclick="location.href='@Url.Action("Edit", "Role", new { id = Model.RoleID })'">Edit</button>

            <button type="button" class="btn btn-default active" onclick="location.href='@Url.Action("Index", "Role")'">Back to list</button>

        </div>
    </div>
</div>

    
    
</div>

            }
